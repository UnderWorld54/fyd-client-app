// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component Snapshots matches snapshot with custom style 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000",
      "borderRadius": 8,
      "marginTop": 20,
      "marginVertical": 8,
      "opacity": 1,
      "padding": 16,
      "width": 200,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#fff",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        false,
      ]
    }
  >
    Custom Button
  </Text>
</View>
`;

exports[`Button Component Snapshots matches snapshot with primary variant 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000",
      "borderRadius": 8,
      "marginVertical": 8,
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#fff",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        false,
      ]
    }
  >
    Primary Button
  </Text>
</View>
`;

exports[`Button Component Snapshots matches snapshot with secondary variant 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "borderColor": "#000",
      "borderRadius": 8,
      "borderWidth": 1,
      "marginVertical": 8,
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#fff",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "#000",
        },
      ]
    }
  >
    Secondary Button
  </Text>
</View>
`;
